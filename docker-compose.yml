services:
  # Ollama LLM Service
  ollama:
    image: ollama/ollama:latest
    container_name: boise_new_ollama
    ports:
      - "11435:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - scribe_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 8G
        reservations:
          memory: 4G

  # Backend API Service
  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: boise_new_backend
    ports:
      - "3051:3051"
    volumes:
      - ./Backend/models:/app/models
      - ./Backend/logs:/app/logs
      - backend_data:/app/data
      - ./Backend/soap_templates:/app/soap_templates
      - ./Backend/voice_profiles:/app/voice_profiles
      - ./Backend:/app
    environment:
      - OLLAMA_HOST=http://ollama:11434
      - WHISPER_MODEL=tiny
      - PYTHONUNBUFFERED=1
      - HF_TOKEN=${HF_TOKEN}
    env_file:
      - .env
    networks:
      - scribe_network
    restart: unless-stopped
    depends_on:
      - ollama
    command: ["sh", "-c", "python init_data_structure.py && python init_database.py && uvicorn main:app --host 0.0.0.0 --port 3051 --reload"]
    
  # Frontend React App
  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    container_name: boise_new_frontend
    environment:
      - REACT_APP_WS_URL=
      - REACT_APP_API_URL=
      - DANGEROUSLY_DISABLE_HOST_CHECK=true
      - WDS_SOCKET_PORT=0
      - GENERATE_SOURCEMAP=false
    networks:
      - scribe_network
    restart: unless-stopped
    depends_on:
      - backend

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: boise_new_nginx
    ports:
      - "3050:3050"
    volumes:
      - ./nginx/nginx-config.conf:/etc/nginx/nginx.conf:ro
    networks:
      - scribe_network
    restart: unless-stopped
    depends_on:
      - frontend
      - backend

networks:
  scribe_network:
    driver: bridge

volumes:
  ollama_data:
    driver: local
  backend_data:
    driver: local
