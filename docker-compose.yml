services:
  # Ollama LLM Service
  ollama:
    image: ollama/ollama:latest
    container_name: boise_new_ollama
    ports:
      - "11435:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - scribe_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 8G
        reservations:
          memory: 4G

  # Backend API Service
  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: boise_new_backend
    ports:
      - "3051:3051"
    volumes:
      - ./Backend/models:/app/models
      - ./Backend/logs:/app/logs
      - ./Backend:/app
    environment:
      - OLLAMA_HOST=http://ollama:11434
      - WHISPER_MODEL=tiny
      - PYTHONUNBUFFERED=1
      - HF_TOKEN=${HF_TOKEN}
    env_file:
      - .env
    networks:
      - scribe_network
    restart: unless-stopped
    depends_on:
      - ollama
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "3051", "--reload"]
    
  # Frontend React App
  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    container_name: boise_new_frontend
    ports:
      - "3050:3000"
    environment:
      - REACT_APP_WS_URL=ws://localhost:3051/ws/audio
      - REACT_APP_API_URL=http://localhost:3051
      # ngrok support - disable host check
      - DANGEROUSLY_DISABLE_HOST_CHECK=true
      - WDS_SOCKET_PORT=0
    networks:
      - scribe_network
    restart: unless-stopped
    depends_on:
      - backend

  # ngrok Service (Optional - run ngrok in Docker)
  ngrok:
    image: ngrok/ngrok:latest
    container_name: boise_ngrok
    ports:
      - "4040:4040"  # ngrok web interface
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    command:
      - "http"
      - "frontend:3000"
      - "--domain=boiseprosthodontic.ngrok-free.app"
    networks:
      - scribe_network
    restart: unless-stopped
    depends_on:
      - frontend

networks:
  scribe_network:
    driver: bridge

volumes:
  ollama_data:
    driver: local
